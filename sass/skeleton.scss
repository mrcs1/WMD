/**
 * SASS/SCSS/Compass Transcription of Skeleton Responsive Grid
 * originally authored by Dave Gamache. This translation offers
 * mixins that support fluid and as well as fixed grids to supplement
 * the work that Dave Gamache has done.
 * @author Dennis Thompson <http://www.atomicpages.net>
 * @copyright Copyright (c) 2013 AtomicPages LLC
 * @license MIT
 * @version 1.6.2
 */

// IMPORTS
@import "vars"; // import _vars
// @import "config";
@import "mixins"; // import _mixins

// VARIABLE OVERRIDE EXAMPLES
// $baseWidth: 95%;
// $tabletWidth: 95%;

/* BASE GRID
 * ------------------------------------------------ */
.container {
	position: relative;
	// change value at the top of this file or in _vars.scss
	width: $baseWidth;
	margin: 0 auto;
	padding: 0;
	.column,
	.columns {
		float: left;
		display: inline;
		position: relative;
		&.alpha { margin-left: 0; }
		&.omega { margin-right: 0; }
	}
}
.row { margin-bottom: 20px; }

@include grid($baseWidth, true); // fluid
// @include grid($baseWidth, false, 20px, 12); // 12-column fixed grid
// @include grid($baseWidth, false, 20px, 20); // 20-column fixed grid
// @include grid($baseWidth);

/* DESKTOP HD (LARGE)
 * ------------------------------------------------ */
@media only screen and (min-width: $baseWidthMQ) and (max-width: $baseWidth + 52) {
	.container {
		// change value at the top of this file or in _vars.scss
		width: $baseWidthMQ;
		.column, .columns {
			&.alpha {
				margin: {
					left: 0;
					right: 10px;
				};
			}
			&.omega {
				margin: {
					right: 0;
					left: 10px;
				};
			}
		}
	}
	.alpha.omega {
		margin: {
			left: 0;
			right: 0;
		};
	}

	// DNRY (Do Not Repeat Yourself) for fluid tablet, values are the same
	// @include grid($tabletWidth, false, 20px, 12); // 12-column fixed grid
	// @include grid($tabletWidth, false, 20px, 20); // 20-column fixed grid
	// @include grid($tabletWidth, false); // fixed
}

/* DESKTOP (regular)
 * ------------------------------------------------ */
@media only screen and (min-width: $desktopWidth) and (max-width: $baseWidthMQ - 1) {
	.container {
		// change value at the top of this file or in _vars.scss
		width: $desktopWidth;
		.column, .columns {
			&.alpha {
				margin: {
					left: 0;
					right: 10px;
				};
			}
			&.omega {
				margin: {
					right: 0;
					left: 10px;
				};
			}
		}
	}
	.alpha.omega {
		margin: {
			left: 0;
			right: 0;
		};
	}

	// DNRY (Do Not Repeat Yourself) for fluid tablet, values are the same
	// @include grid($tabletWidth, false, 20px, 12); // 12-column fixed grid
	// @include grid($tabletWidth, false, 20px, 20); // 20-column fixed grid
	// @include grid($tabletWidth, false); // fixed
}

/* LAPTOP (small)
 * ------------------------------------------------ */
@media only screen and (min-width: $laptopWidth) and (max-width: $desktopWidth - 52) {
	.container {
		// change value at the top of this file or in _vars.scss
		width: 960px;
		.column, .columns {
			&.alpha {
				margin: {
					left: 0;
					right: 10px;
				};
			}
			&.omega {
				margin: {
					right: 0;
					left: 10px;
				};
			}
		}
	}
	.alpha.omega {
		margin: {
			left: 0;
			right: 0;
		};
	}

	// DNRY (Do Not Repeat Yourself) for fluid tablet, values are the same
	// @include grid($tabletWidth, false, 20px, 12); // 12-column fixed grid
	// @include grid($tabletWidth, false, 20px, 20); // 20-column fixed grid
	// @include grid($tabletWidth, false); // fixed
}



/* TABLET (PORTRAIT)
 * ------------------------------------------------ */
@media only screen and (min-width: $tabletWidth) and (max-width: $laptopWidth - 1) {
	.container {
		// change value at the top of this file or in _vars.scss
		width: 690px;
		.column, .columns {
			&.alpha {
				margin: {
					left: 0;
					right: 10px;
				};
			}
			&.omega {
				margin: {
					right: 0;
					left: 10px;
				};
			}
		}
	}
	.alpha.omega {
		margin: {
			left: 0;
			right: 0;
		};
	}

	// DNRY (Do Not Repeat Yourself) for fluid tablet, values are the same
	// @include grid($tabletWidth, false, 20px, 12); // 12-column fixed grid
	// @include grid($tabletWidth, false, 20px, 20); // 20-column fixed grid
	// @include grid($tabletWidth, false); // fixed
}


/*  MOBILE (PORTRAIT)
 * ------------------------------------------------ */
@media only screen and (max-width: 479px) {
	@include mobileGrid($mobilePortraitWidth);
}

/* MOBILE (LANDSCAPE)
 * ------------------------------------------------ */
@media only screen and (min-width: 480px) and (max-width: $tabletWidth - 1) {
	@include mobileGrid($mobileLandscapeWidth);
}

/* CLEARING
 * ------------------------------------------------ */
.container:after {
	content: "\0020";
	display: block;
	height: 0;
	clear: both;
	visibility: hidden;
}
.clearfix, .row {
	zoom: 1;
	&:before, &:after {
		content: "\0020";
		display: block;
		overflow: hidden;
		visibility: hidden;
		width: 0;
		height: 0;
	}
	&:after { clear: both; }
}
.clear {
	clear: both;
	display: block;
	overflow: hidden;
	visibility: hidden;
	width: 0;
	height: 0;
}
